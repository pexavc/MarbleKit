precision highp float;
uniform vec2 u_resolution;
uniform float u_time;
uniform vec2 u_position;
                
#define MAIN_COLOR vec3(1.0, 1.0, 1.0)

void main()
{
	vec2 p=(2.0*gl_FragCoord.xy-u_resolution.xy)/max(u_resolution.x,u_resolution.y);

    int i = 1;
    vec2 newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
		newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
		p=newp;
    i = 2;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 3;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 4;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 5;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 6;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 7;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 8;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;
    i = 9;
    newp=p;
    newp.x+=0.6/float(i)*sin(float(i)*p.y+(u_time*$MarbleSpeed$)+0.3*float(i))+1.0;
        newp.y+=0.6/float(i)*sin(float(i)*p.x+(u_time*$MarbleSpeed$)+0.3*float(i+10))-1.4;
        p=newp;

	vec3 col=vec3(1.0 - abs(sin(p.x)), 1.0 - abs(sin(p.x+p.y)), 1.0 - abs(sin(p.y)))
        			* MAIN_COLOR;
	gl_FragColor=vec4(col, 1.0);
}

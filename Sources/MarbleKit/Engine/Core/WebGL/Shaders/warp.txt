precision highp float;
uniform vec2 u_resolution;
uniform float u_time;
uniform vec2 u_position;

float rand(vec2 co){
    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);
}

void main()
{
vec2 st = gl_FragCoord.xy/u_resolution.xy;
float s = sin(u_time) + rand(st) + 2., v = sin(u_time) + rand(st) ;
vec2 uv = (gl_FragCoord.xy / u_resolution.xy) * 2.0 - 1.;
float time = (u_time-2.0)*58.0;
vec3 col = vec3(0);
vec3 init = vec3(sin(u_time * .0032)*.3, .35 - cos(u_time * .005)*.3, u_time * 0.002);
    for (int r = 0; r < 100; r++)
    {
        vec3 p = init + s * vec3(uv, 0.05);
        p.z = fract(p.z);

        for (int i=0; i < 10; i++)    p = abs(p * 2.04) / dot(p, p) - .9;
        v += pow(dot(p, p), .7) * .06;
        col +=  vec3(v * 0.2+.4, 12.-s*2., .1 + v * 1.) * v * 0.00003;
        s += .025;
    }
gl_FragColor = vec4(clamp(col, 0.0, 1.0), 1.0);
}

precision highp float;
uniform vec2 u_resolution;
uniform float u_time;
uniform vec2 u_position;

void main()
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = gl_FragCoord.xy/u_resolution.xy;

    uv = (1.0 - 2.0 * uv) * vec2(u_resolution.x / u_resolution.y, 1);

    vec2 uv_n = uv*2.2;
    float len;
    const int mult = 13;
    for(int i = 0; i < mult; i++){
        len = length(uv_n);
        uv_n.x += sin(uv_n.y - cos(len)) + cos(u_time/9.0);
        uv_n.y += cos(uv_n.x - sin(len)) + sin(u_time/12.0);
    }

    uv = fract(uv*2.0)-0.5;
    uv = mix(uv, uv*sin(len), 0.4);
    float shape = step(0.25, length(uv));

    vec3 col = vec3(shape);

    gl_FragColor = vec4(col,1.0);
}